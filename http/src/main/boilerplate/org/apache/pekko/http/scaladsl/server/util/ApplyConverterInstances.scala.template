/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * license agreements; and to You under the Apache License, version 2.0:
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * This file is part of the Apache Pekko project, which was derived from Akka.
 */

/*
 * Copyright (C) 2009-2020 Lightbend Inc. <http://www.lightbend.com>
 */

package org.apache.pekko.http.scaladsl.server.util

import org.apache.pekko.http.scaladsl.server.Route

private[util] abstract class ApplyConverterInstances {
  [#implicit def hac1[[#T1#]]: ApplyConverter[Tuple1[[#T1#]]] { type In = ([#T1#]) => Route } = new ApplyConverter[Tuple1[[#T1#]]] {
    type In = ([#T1#]) => Route
    def apply(fn: In): (Tuple1[[#T1#]]) => Route = {
      case Tuple1([#t1#]) => fn([#t1#])
    }
  }#
  ]
}